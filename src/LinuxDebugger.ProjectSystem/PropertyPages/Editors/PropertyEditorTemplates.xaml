<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:designer="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.PropertyPages.Designer;assembly=Microsoft.VisualStudio.ProjectSystem.VS"
                    xmlns:platform="clr-namespace:Microsoft.Internal.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:platformui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:converters="clr-namespace:LinuxDebugger.ProjectSystem.Controls.Converters"
                    xmlns:local="clr-namespace:LinuxDebugger.ProjectSystem.PropertyPages.Editors"
                    xmlns:vms="clr-namespace:LinuxDebugger.ProjectSystem.ViewModels"
                    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
                    xmlns:imageCatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.VisualStudio.ProjectSystem.VS.Implementation;component/PropertyPages/Designer/Resources/PropertyTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PathMappingTextBoxStyle" TargetType="{x:Type TextBox}"
         BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.TextBoxStyleKey}}">
        <Setter Property="Control.Padding" Value="3"/>
        <!--<Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>-->
        <!--<Setter Property="MinWidth" Value="{x:Static DependencyProperty.UnsetValue}"/>-->
    </Style>

    <Style TargetType="ButtonBase" x:Key="CrispImageButtonBaseStyle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="Transparent" Width="16" Height="16">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="CrispImageButtonStyle"
           BasedOn="{StaticResource CrispImageButtonBaseStyle}" />

    <Style TargetType="ToggleButton"
           x:Key="CrispImageToggleButtonStyle"
           BasedOn="{StaticResource CrispImageButtonBaseStyle}" />

    <Style TargetType="local:PathMappingControl" x:Key="{x:Type local:PathMappingControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PathMappingControl">
                    <ItemsControl ItemsSource="{TemplateBinding Mappings}"
                                  x:Name="PART_ItemsControl"
                                  Focusable="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="vms:FileUploadViewModel">
                                <Grid Margin="0,0,0,4">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <DockPanel Focusable="False">
                                        <Button DockPanel.Dock="Right"
                                                Focusable="False"
                                                Command="{Binding RemoveCommand, RelativeSource={RelativeSource AncestorType=local:PathMappingControl}}"
                                                CommandParameter="{Binding}"
                                                Margin="4,3,0,0"
                                                Padding="3,0"
                                                ToolTip="Remove"
                                                VerticalAlignment="Top"
                                                Style="{StaticResource CrispImageButtonBaseStyle}"
                                                Visibility="{Binding IsPlaceHolder, Converter={x:Static converters:EditorConverters.BooleanToHidden}, ConverterParameter=true}">
                                            <imaging:CrispImage Focusable="False"
                                                                Moniker="{x:Static imageCatalog:KnownMonikers.Cancel}"
                                                                />
                                        </Button>
                                        <ContentPresenter Content="{Binding}"
                                                          ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=local:PathMappingControl}, Mode=OneWay}"
                                                          />
                                    </DockPanel>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PropertyMenuStyle" TargetType="Menu">
        <Setter Property="DockPanel.Dock" Value="Left" />
        <Setter Property="Margin" Value="8,2,0,0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="PropertyMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="UsesItemContainerTemplate" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusManager.IsFocusScope" Value="False" />
    </Style>

    <DataTemplate x:Key="EditorGenericTemplate" DataType="designer:IProperty">
        <Border x:Name="RootBorder" Background="Transparent"
                Padding="0,16"
                Focusable="True"
                KeyboardNavigation.DirectionalNavigation="None"
                FocusVisualStyle="{DynamicResource WhiteBorderFocusVisualStyle}"
                IsEnabled="{Binding Path=IsReadOnly, Converter={x:Static converters:EditorConverters.InvertBoolean}}">
            <DockPanel>
                <Menu>
                    <Control.Template>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </ControlTemplate>
                    </Control.Template>
                    <Menu.Style>
                        <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource PropertyMenuStyle}">
                            <Setter Property="UIElement.IsEnabled">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static converters:EditorConverters.PropertyMenuEnabled}">
                                        <Binding/>
                                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType=Border}"/>
                                        <Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource AncestorType=Border}"/>
                                        <Binding Path="Values.Version"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="UIElement.Opacity">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static converters:EditorConverters.PropertyMenuOpacity}">
                                        <Binding/>
                                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType=Border}"/>
                                        <Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource AncestorType=Border}"/>
                                        <Binding Path="Values.Version"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Style>
                    <MenuItem Style="{StaticResource PropertyMenuItemStyle}"
                              ItemsSource="{Binding Context.ConfigurationCommands}">
                        <HeaderedItemsControl.Header>
                            <Border FocusVisualStyle="{DynamicResource WhiteBorderFocusVisualStyle}"
                                    KeyboardNavigation.IsTabStop="True"
                                    Focusable="True">
                                <imaging:CrispImage Moniker="{x:Static imageCatalog:KnownMonikers.Settings}"
                                                    Focusable="False"
                                                    Width="16"
                                                    Height="16" />
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding DisplayName, Converter={x:Static converters:EditorConverters.ConfigurationIconButtonAccessibleName}}"/>
                                </ToolTipService.ToolTip>
                            </Border>
                        </HeaderedItemsControl.Header>
                        <Control.Template>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Grid Background="Transparent">
                                    <ContentPresenter Name="HeaderHost" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="true"
                                           Placement="Bottom"
                                           Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border Background="{DynamicResource {x:Static platformui:EnvironmentColors.ToolTipBrushKey}}"
                                                BorderBrush="{DynamicResource {x:Static platformui:EnvironmentColors.ToolTipBorderBrushKey}}"
                                                TextBlock.Foreground="{DynamicResource {x:Static platformui:EnvironmentColors.ToolTipTextBrushKey}}"
                                                BorderThickness="1" Margin="0,0,8,8" Padding="2">
                                            <UIElement.Effect>
                                                <DropShadowEffect Opacity="0.3"
                                                                  BlurRadius="4"
                                                                  ShadowDepth="3"/>
                                            </UIElement.Effect>
                                            <ItemsPresenter Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="true"
                                                            />
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </Control.Template>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="HeaderedItemsControl.Header" Value="{Binding Caption}"/>
                                <Setter Property="MenuItem.IsChecked">
                                    <Setter.Value>
                                        <MultiBinding Converter="{x:Static converters:EditorConverters.PropertyConfigurationCommandChecked}" Mode="OneWay">
                                            <Binding/>
                                            <Binding Path="DataContext.Values" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                            <Binding Path="DataContext.Values.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="UIElement.IsEnabled">
                                    <Setter.Value>
                                        <MultiBinding Converter="{x:Static converters:EditorConverters.PropertyCommandEnabled}" Mode="OneWay">
                                            <Binding/>
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                            <Binding Path="DataContext.Values.Version" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="MenuItem.IsCheckable">
                                    <Setter.Value>
                                        <MultiBinding Converter="{x:Static converters:EditorConverters.PropertyConfigurationCommandIsCheckable}" Mode="OneWay">
                                            <Binding/>
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                            <Binding Path="DataContext.Values.Version" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="MenuItem.Command" Value="{Binding Path=Command}"/>
                                <Setter Property="UIElement.Focusable" Value="True"/>
                                <Setter Property="MenuItem.CommandParameter"
                                        Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Menu}, Path=DataContext}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </MenuItem>
                </Menu>
                <DockPanel Dock="Top" Margin="4,0,0,4" HorizontalAlignment="Left">
                    <platform:HighlightTextBlock TextBlock.FontWeight="Bold"
                                                 FrameworkElement.Style="{StaticResource HighlightTextBlockStyle}"
                                                 TextSource="{Binding DisplayName}"/>
                </DockPanel>
                <platform:HighlightTextBlock DockPanel.Dock="Top"
                                             FrameworkElement.Margin="4,0,0,6"
                                             FrameworkElement.Style="{StaticResource HighlightTextBlockStyle}"
                                             TextBlock.Foreground="{DynamicResource {x:Static platformui:CommonDocumentColors.SupportTextBrushKey}}"
                                             FrameworkElement.MaxWidth="{StaticResource MaxDescriptionWidth}"
                                             TextSource="{Binding Description}" />
                <ItemsControl Margin="4,0,0,0"
                              Focusable="False"
                              IsTabStop="False"
                              Grid.IsSharedSizeScope="True"
                              ItemsSource="{Binding Values}"
                              IsEnabled="{Binding IsEnabled, Mode=OneWay}"
                              >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="designer:IPropertyValueViewModel">
                            <ContentPresenter ContentTemplate="{Binding Path=(local:EditorTemplates.Template), RelativeSource={RelativeSource Self}}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <FrameworkElement.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Control.IsTabStop" Value="True" />
                    </Style>
                </FrameworkElement.Style>
            </DockPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PathMappingDataTemplate"  DataType="designer:IPropertyValueViewModel">
        <local:PathMappingControl StringListProperty="{Binding UnevaluatedValue, Mode=TwoWay}"
                                  Style="{StaticResource {x:Type local:PathMappingControl}}">
            <local:PathMappingControl.ItemTemplate>
                <DataTemplate DataType="vms:FileUploadViewModel">
                    <Grid local:Behaviors.PathMappingBehavior="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Column="0"
                                 Margin="0,0,5,0"
                                 Text="{Binding LocalPath, UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="LocalPathInput"
                                 Style="{StaticResource PathMappingTextBoxStyle}" />
                        <TextBox Grid.Column="1"
                                 x:Name="RemotePathInput"
                                 Text="{Binding RemotePath, UpdateSourceTrigger=LostFocus}"
                                 local:Behaviors.LastMappingInputBehavior="True"
                                 Style="{StaticResource PathMappingTextBoxStyle}" />

                        <Border Grid.Row="1" Grid.ColumnSpan="2"
                                x:Name="DetailsPanel"
                                KeyboardNavigation.TabNavigation="None">
                            <Control x:Name="DetailsPaneContent" />
                        </Border>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Mode}"
                                     Value="{x:Static local:MappingMode.Upload}">
                            <Setter TargetName="DetailsPanel"
                                    Property="Visibility"
                                    Value="Collapsed"
                                    />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Mode}" Value="{x:Static local:MappingMode.Download}" />
                                <Condition Binding="{Binding IsPlaceHolder}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DetailsPaneContent"
                                    Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel d:DataContext="{d:DesignInstance vms:FileUploadViewModel}"
                                                    HorizontalAlignment="Left"
                                                    Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding Required}"
                                                          Style="{DynamicResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}">
                                                        <platform:HighlightTextBlock TextSource="Required"/>
                                                </CheckBox>
                                            </StackPanel>
                                            <StackPanel d:DataContext="{d:DesignInstance vms:FileUploadViewModel}"
                                                        HorizontalAlignment="Left"
                                                        Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding OpenInEditor}"
                                                          Style="{DynamicResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}"
                                                          >
                                                    <platform:HighlightTextBlock TextSource="Open In Editor"/>
                                                </CheckBox>
                                            </StackPanel>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </local:PathMappingControl.ItemTemplate>
        </local:PathMappingControl>
    </DataTemplate>

    <DataTemplate x:Key="UploadMappingDataTemplate">
        <ContentPresenter ContentTemplate="{StaticResource EditorGenericTemplate}"
                          local:EditorTemplates.Template="{StaticResource PathMappingDataTemplate}"
                          local:EditorTemplates.EditorMetadata="{Binding DataContext.EditorMetadata, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                          />
    </DataTemplate>

    <DataTemplate x:Key="ShellCommandDataTemplate">
        <ContentPresenter ContentTemplate="{StaticResource EditorGenericTemplate}"
                          local:EditorTemplates.EditorMetadata="{Binding DataContext.EditorMetadata, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                          >
            <local:EditorTemplates.Template>
                <DataTemplate DataType="designer:IPropertyValueViewModel">
                    <local:ShellCommandLineControl Value="{Binding UnevaluatedValue, Mode=TwoWay}">
                        <Control.Template>
                            <ControlTemplate TargetType="local:ShellCommandLineControl">
                                <DockPanel HorizontalAlignment="Left">
                                    <Border DockPanel.Dock="Bottom" HorizontalAlignment="Right">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Ignore exit code">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}"
                                                           BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.TextBlockEnvironment90PercentFontSizeStyleKey}}">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource {x:Static platformui:CommonControlsColors.CheckBoxTextBrushKey}}" />
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource {x:Static platformui:CommonControlsColors.CheckBoxBackgroundBrushKey}}" />
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <CheckBox Style="{DynamicResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}"
                                                      IsChecked="{Binding IgnoreExitCode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      />
                                        </StackPanel>
                                    </Border>
                                    <TextBox Style="{StaticResource MultilineTextBoxStyle}"
                                             MinHeight="42"
                                             HorizontalScrollBarVisibility="Auto"
                                             x:Name="tbCommandLine"
                                             AcceptsReturn="True"
                                             Text="{Binding CommandLine, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             />
                                </DockPanel>
                            </ControlTemplate>
                        </Control.Template>
                    </local:ShellCommandLineControl>
                </DataTemplate>
            </local:EditorTemplates.Template>
        </ContentPresenter>
    </DataTemplate>
</ResourceDictionary>